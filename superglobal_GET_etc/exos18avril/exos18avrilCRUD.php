EXO CRUD <?php
// Liste des 20 exercices PDO sur la base "bibliotheque" VOIR SUITE TEAMS
$exercices = [
    "1 Afficher tous les livres de la base (titre, annÃ©e, genre).",
    "2 Afficher le nom de tous les auteurs triÃ©s par ordre alphabÃ©tique.",
    "3 RÃ©cupÃ©rer les informations du livre avec l'id = 2.",
    "4 Afficher tous les membres inscrits avant une date donnÃ©e (ex : 2025-04-05).",
    "5 Afficher uniquement les titres des livres publiÃ©s aprÃ¨s l'annÃ©e 1950.",
    "6 Afficher les livres dâ€™un auteur donnÃ© (nom passÃ© en variable).",

    ousmane
    <?php
    // Variable contenant le nom de l'auteur Ã  rechercher (peut venir d'un formulaire ou d'une URL plus tard)
    $vic = "victor hugo";
     
    // PrÃ©paration de la requÃªte SQL avec un INNER JOIN pour lier livres et auteurs via auteur_id
    $sqlautoro = "SELECT livres.titre, auteurs.nom
                  FROM livres
                  INNER JOIN auteurs ON auteurs.id = livres.auteur_id
                  WHERE auteurs.nom = ?"; // Utilisation d'un paramÃ¨tre pour sÃ©curiser la requÃªte
     
    // PrÃ©paration de la requÃªte avec PDO (protection contre les injections SQL)
    $stmtautoro = $pdo->prepare($sqlautoro);
     
    // ExÃ©cution de la requÃªte avec la variable dynamique $vic comme paramÃ¨tre
    $stmtautoro->execute([$vic]);
     
    // RÃ©cupÃ©ration de tous les rÃ©sultats dans un tableau associatif
    $autoro = $stmtautoro->fetchAll();
     
    var_dump($autoro);
    // VÃ©rification s'il y a bien des livres retournÃ©s pour cet auteur
    if (!empty($autoro)) {
        // On initialise une variable pour afficher le nom de lâ€™auteur une seule fois dans la boucle
        $auteurAffiche = false;
     
        echo "<ul>"; // DÃ©but de la liste des livres
     
        // Boucle sur chaque livre trouvÃ©
        foreach ($autoro as $livre) {
     
            // Affichage du nom de lâ€™auteur une seule fois, lors du premier tour de boucle
            if (!$auteurAffiche) {
                echo "<h3>L'auteur " . htmlspecialchars($livre['nom']) . " a ce(s) livre(s) disponible(s) :</h3>";
                $auteurAffiche = true; // On indique que lâ€™auteur a Ã©tÃ© affichÃ©
            }
     
            // Affichage du titre du livre dans une liste
            echo "<li>" . htmlspecialchars($livre['titre']) . "</li>";
        }
     
        echo "</ul>"; // Fin de la liste
    } else {
        // Message si aucun livre n'est trouvÃ© pour cet auteur
        echo "Aucun livre trouvÃ©.";
    }
    ?>
 
    
    "7 Afficher tous les emprunts dâ€™un membre (par email).",
    "8 Afficher les livres correspondant Ã  un genre donnÃ©.",
    "9 Afficher les membres ayant empruntÃ© un livre spÃ©cifique (par titre).",
    "10 Afficher les emprunts effectuÃ©s entre deux dates donnÃ©es.",
    "11 Ajouter un nouveau membre avec son nom et email.",
    "12 Ajouter un nouveau livre avec son titre, annÃ©e, genre et auteur.",
    "13 Ajouter un nouvel emprunt pour un membre et un livre donnÃ©s.",
    "14 Modifier lâ€™email dâ€™un membre existant (UPDATE).",
    "15 Supprimer un livre par son ID (DELETE).",
    "16 Afficher tous les emprunts avec : nom du membre, titre du livre, nom de lâ€™auteur, date.",
    "17 Afficher tous les livres avec le nom de leur auteur (jointure).",
    "18 Afficher les livres qui nâ€™ont jamais Ã©tÃ© empruntÃ©s.",
    "19 Afficher les membres qui nâ€™ont jamais empruntÃ© de livre.",
    "20 Afficher le nombre de livres empruntÃ©s par chaque membre."
];
 
?>
 
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Ã‰noncÃ©s des Exercices PDO</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #336699; }
        ul { line-height: 1.6; }
        li { margin-bottom: 8px; }
    </style>
</head>
<body>
 
<h1>ðŸ“˜ Exercices PDO - BibliothÃ¨que</h1>
<ol>
    <?php foreach ($exercices as $i => $exo): ?>
        <li><strong>Exercice <?= $i + 1 ?> :</strong> <?= $exo ?></li>
    <?php endforeach; ?>
</ol>
 
</body>
</html>
 
 